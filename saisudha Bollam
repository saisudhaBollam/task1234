function numbers(1, r) {
  // 1 and r are any given numbers
  var x=[];
  vari=1;
  While(x.push(i++),r){};
  return x;
}

console.log(numbers(10, 19));

function title case(str) {
 const arr = str.split("");
const result = arr.reduce((acc, cur) => {
  const newstr= cur[0].toUppercase() + cur.slice(1). toLowercase();
return acc += ${newStr}
},"")
return result.slice(0, result.length-1);
}

const sum = [1, 2, 3].reduce(add, 0);// with initial value to avoid when the array is 

function add(accumlator, a) {
  return accumlator + a;
}

console.log(sum); // 6

functionsum primes (num) {
  // produce an array containing all number of to and including num
 let num numArray = [];
 for (let i = 1; i <= num; i++) (
    numArray.push(i);
 }
 
 //Remove non-prime numbers from the array
 numArray.mP((Number) => {
    for (let i = 2; i < number  i ++) {
        if(number % i === 0) {
          let index = numArray.indexof(number);
          return numArray.splice(index, 1);
        }
      }
    });
    
    return numArray;
  }
  sumprimes(10);
  
  function reverse(n) {
      var rem = 0
    while (n > 0) {
        rem = n % 10
        res = res * 10 + rem
        n = n/10
        
        }
        return res
    }
    
    function is Palindrome(n) {
        if (n == reverse(n)) return true
    }
    
    function sumArray(arr) {
    var sum = 0
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] > 10 && isPalindrome(arr[i])) {
            sum += arr{i]
        }
        
    }
    console.log(sum);
    
}

sumArray('[12, 313, 11, 44, 9, 1])
     
      
    
